name: Trigger Blue/Green Deployment

on:
  workflow_dispatch:

jobs:
  deploy-green:
    name: Register Task Def and Deploy via CodeDeploy
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-2
      ECR_REPO: 607700977843.dkr.ecr.us-east-2.amazonaws.com/strapi-varun-ecr-repo
      TASK_FAMILY: strapi-bluegreen
      CONTAINER_NAME: strapi-varun-container
      CONTAINER_PORT: 1337
      CODEDEPLOY_APP_NAME: strapi-bluegreen-app
      CODEDEPLOY_DEPLOYMENT_GROUP: strapi-bluegreen-deployment-group

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Read image tag from file
        run: |
          IMAGE_TAG=$(cat image_tag.txt)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get current task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition $TASK_FAMILY \
            > task-def.json

      - name: Register new task definition with updated image
        run: |
          IMAGE="$ECR_REPO:$IMAGE_TAG"

          jq --arg IMAGE "$IMAGE" \
             --arg CONTAINER_NAME "$CONTAINER_NAME" \
             '.taskDefinition.containerDefinitions |= map(if .name == $CONTAINER_NAME then .image = $IMAGE else . end) |
              {
                family: .taskDefinition.family,
                executionRoleArn: .taskDefinition.executionRoleArn,
                networkMode: .taskDefinition.networkMode,
                containerDefinitions: .taskDefinition.containerDefinitions,
                requiresCompatibilities: .taskDefinition.requiresCompatibilities,
                cpu: .taskDefinition.cpu,
                memory: .taskDefinition.memory
              }' \
              task-def.json > new-task-def.json

          TASK_DEF_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://new-task-def.json \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)

          echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

      - name: Prepare AppSpec file for CodeDeploy
        run: |
          cat <<EOF > appspec.json
          {
            "version": 1,
            "Resources": [
              {
                "TargetService": {
                  "Type": "AWS::ECS::Service",
                  "Properties": {
                    "TaskDefinition": "$TASK_DEF_ARN",
                    "LoadBalancerInfo": {
                      "ContainerName": "$CONTAINER_NAME",
                      "ContainerPort": $CONTAINER_PORT
                    }
                  }
                }
              }
            ]
          }
          EOF

      - name: Trigger CodeDeploy Blue/Green Deployment
        run: |
          CONTENT=$(jq -c . appspec.json)

          aws deploy create-deployment \
            --application-name $CODEDEPLOY_APP_NAME \
            --deployment-group-name $CODEDEPLOY_DEPLOYMENT_GROUP \
            --revision revisionType=AppSpecContent,appSpecContent="{\"content\":\"$CONTENT\"}" \
            --deployment-config-name CodeDeployDefault.ECSCanary10Percent5Minutes \
            --description "Green deployment with image tag: $IMAGE_TAG"
